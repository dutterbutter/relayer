initSidebarItems({"trait":[["BridgeWatcher","A Bridge Watcher is a trait for Bridge contracts that not specific for watching events from that contract, instead it watches for commands sent from other event watchers or services, it helps decouple the event watchers from the actual action that should be taken depending on the event."],["EventHandler","A trait that defines a handler for a specific set of event types."],["EventHandlerWithRetry","An Auxiliary trait to handle events with retry logic."],["EventWatcher","A trait for watching events from a watchable contract. EventWatcher trait exists for deployments that are smart-contract / EVM based"],["SubstrateBridgeWatcher","instead it watches for commands sent from other event watchers or services, it helps decouple the event watchers from the actual action that should be taken depending on the event."],["SubstrateEventWatcher","Represents a Substrate event watcher."],["WatchableContract","A watchable contract is a contract used in the [EventWatcher]"]],"type":[["BlockNumberOf","Type alias for Substrate block number."],["EventHandlerFor","A helper type to extract the [`EventHandler`] from the [`EventWatcher`] trait."]]});